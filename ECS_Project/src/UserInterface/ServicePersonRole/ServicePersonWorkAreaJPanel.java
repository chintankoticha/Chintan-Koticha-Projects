/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ServicePersonRole;

import business.EcoSystem;
import business.consumer.Customer;
import business.enterprise.Enterprise;
import business.market.Product;
import business.market.ProductCategory;
import business.network.Network;
import business.organization.ServicePersonOrganization;
import business.useraccount.UserAccount;
import business.workqueue.CustomerAlertWorkRequest;
import business.workqueue.ServicePersonProductRequest;
import business.workqueue.ServicePersonWorkRequest;
import business.workqueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Siddhant
 */
public class ServicePersonWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private ServicePersonOrganization servicePersonOrganization;
    private Enterprise enterprise;
    private ProductCategory productCategory;

    /**
     * Creates new form ServicePersonWorkAreaJPanel
     */
    public ServicePersonWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, ServicePersonOrganization servicePersonOrganization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = system;
        this.enterprise = enterprise;
        this.servicePersonOrganization = servicePersonOrganization;
        productCategory = new ProductCategory();
        populateTable();
        populateComboBox();
        populateRequestTable();
        processJButton.setEnabled(false);
    }

    public void populateComboBox() {
        productsComboBox.removeAllItems();
        productsComboBox.addItem("---");
        for (Product product : enterprise.getProductCatalog().getProductList()) {
            productsComboBox.addItem(product);
        }
    }

    public void populateRequestTable() {

        DefaultTableModel model = (DefaultTableModel) workRequestJTable2.getModel();

        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            if(request.getAutoGenerated()!=1)
            {          
            Object[] row = new Object[4];
            row[0] = request.getMessage();
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
            String result = ((ServicePersonProductRequest) request).getRequestResult();
            row[3] = result == null ? "Waiting" : result;

            model.addRow(row);
            }
        }
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : servicePersonOrganization.getWorkQueue().getWorkRequestList()) {
            if(request.getAutoGenerated()!=1){
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getFirstName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getFirstName();
            row[3] = request.getStatus();

            model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        refreshJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        productsComboBox = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        workRequestJTable2 = new javax.swing.JTable();
        requestTestJButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        autoGenWorkReqJTable = new javax.swing.JTable();
        autoGenWorkReqBtn = new javax.swing.JButton();
        alertCustomerBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        productJLabel = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        refreshJButton.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 72, -1, -1));

        workRequestJTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 115, 375, 96));

        assignJButton.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 229, -1, -1));

        processJButton.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 229, -1, -1));

        productsComboBox.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        productsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---products---" }));
        productsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productsComboBoxActionPerformed(evt);
            }
        });
        add(productsComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 273, 133, -1));

        workRequestJTable2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        workRequestJTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Receiver", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(workRequestJTable2);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 315, 382, 97));

        requestTestJButton.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        requestTestJButton.setText("Request Test");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        add(requestTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(281, 430, 119, -1));

        autoGenWorkReqJTable.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        autoGenWorkReqJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Receiver", "Status", "Auto Generated"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(autoGenWorkReqJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(418, 115, -1, 96));

        autoGenWorkReqBtn.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        autoGenWorkReqBtn.setText("Auto Generated Requests");
        autoGenWorkReqBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoGenWorkReqBtnActionPerformed(evt);
            }
        });
        add(autoGenWorkReqBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(418, 72, -1, -1));

        alertCustomerBtn.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        alertCustomerBtn.setText("Send Alert to Customer");
        alertCustomerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alertCustomerBtnActionPerformed(evt);
            }
        });
        add(alertCustomerBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(418, 229, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Service Person Work Area");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 25, -1, -1));

        productJLabel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        productJLabel.setText("Select Product");
        add(productJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 272, 107, 25));
    }// </editor-fold>//GEN-END:initComponents

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row first");
            return;
        }

        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        request.setCustomer(request.getCustomer());
        populateTable();
        processJButton.setEnabled(true);
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row first!!");
            return;
        }
        
        if (!productsComboBox.getSelectedItem().equals("---")) {
            // JOptionPane.showMessageDialog(null,"please select a product first!!!");

            Product product = new Product();
            try {

                product = (Product) productsComboBox.getSelectedItem();
            } catch (Exception e) {

            }
              int count = product.getServiceInventory().getCount();
            if (product.getServiceInventory().getCount() > 45) {
                ServicePersonWorkRequest request = (ServicePersonWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);

               
                request.setStatus("Processing");
                request.setCustomer(request.getCustomer());
                count--;
                System.out.println(count);
                product.getServiceInventory().setCount(count);

                ServicePersonProcessWorkRequestJPanel processWorkRequestJPanel = new ServicePersonProcessWorkRequestJPanel(userProcessContainer,enterprise, request);
                userProcessContainer.add("ServicePersonProcessWorkRequestJPanel", processWorkRequestJPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            } else {
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                userProcessContainer.add("RequestLabTestJPanel", new RequestProductJPanel(userProcessContainer, userAccount, enterprise, business));
                layout.next(userProcessContainer);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a product first!!!");
    }//GEN-LAST:event_processJButtonActionPerformed

    }

    private void productsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productsComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productsComboBoxActionPerformed

    public void populateAutoReqTable() {

       DefaultTableModel model = (DefaultTableModel) autoGenWorkReqJTable.getModel();

       model.setRowCount(0);
       for (WorkRequest request : servicePersonOrganization.getWorkQueue().getWorkRequestList()) {
           if(request.getAutoGenerated()==1){
           Object[] row = new Object[5];
           row[0] = request;
           row[1] = request.getSender();
           row[2] = request.getReceiver();
           row[3] = request.getStatus();
           row[4] = request.getAutoGenerated();
           //String result = ((ServicePersonProductRequest) request).getRequestResult();
           //row[3] = result == null ? "Waiting" : result;

           model.addRow(row);
           }
       }
   }
    
    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
        if (productsComboBox.getSelectedItem().equals("---")) {
            JOptionPane.showMessageDialog(null, "please select a product first!!!");
        }
        Product product = new Product();
        product = (Product) productsComboBox.getSelectedItem();
        int count = product.getServiceInventory().getCount();
        //for(Product p:enterprise.getProductCatalog().getProductList())

        if (product.getServiceInventory().getCount() > 0) {
           // JOptionPane.showMessageDialog(this, "lets code");
           // System.out.println(product.getServiceInventory().getCount());
           // System.out.println(product.getProductName());
            count--;
           // System.out.println(count);
            JOptionPane.showMessageDialog(this, "Count of product reduced!!!");

        } else {

            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("RequestLabTestJPanel", new RequestProductJPanel(userProcessContainer, userAccount, enterprise, business));
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void autoGenWorkReqBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoGenWorkReqBtnActionPerformed
        // TODO add your handling code here:
        populateAutoReqTable();
    }//GEN-LAST:event_autoGenWorkReqBtnActionPerformed

    private void alertCustomerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alertCustomerBtnActionPerformed
        // TODO add your handling code here:
        int rowselected=autoGenWorkReqJTable.getSelectedRow();
        if(rowselected<0){
            JOptionPane.showMessageDialog(this, "Please select a row first");
            return;
        }
        WorkRequest request = (WorkRequest)autoGenWorkReqJTable.getValueAt(rowselected, 0);
        for(Network network : business.getNetworkList()){
            for(Customer customer :network.getCustomerDirectory().getCustomerDirectory()){
                if(customer.getFirstName().equalsIgnoreCase(request.getCustomer().getFirstName())){
                    CustomerAlertWorkRequest cawr = new CustomerAlertWorkRequest();
                    cawr.setMessage("Schedule an Appoinment");
                    Date date = new Date();
                    cawr.setRequestDate(date);
                    customer.getWorkQueue().getWorkRequestList().add(request);
                    request.setStatus("Sent Reminder!!");
                }
            }
        }
        
    }//GEN-LAST:event_alertCustomerBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alertCustomerBtn;
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton autoGenWorkReqBtn;
    private javax.swing.JTable autoGenWorkReqJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton processJButton;
    private javax.swing.JLabel productJLabel;
    private javax.swing.JComboBox<Object> productsComboBox;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JTable workRequestJTable;
    private javax.swing.JTable workRequestJTable2;
    // End of variables declaration//GEN-END:variables
}
