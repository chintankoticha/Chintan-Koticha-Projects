/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ServicePersonRole;

import UserInterface.SalesPersonRole.*;
import business.EcoSystem;
import business.market.Product;
import business.market.ProductCategory;
import business.market.ServiceInventory;
import business.market.SupplierDirectory;

import business.organization.ServicePersonOrganization;
import business.organization.SalesPersonOrganization;
import business.useraccount.UserAccount;
import business.workqueue.SalesPersonWorkRequest;
import business.workqueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Siddhant
 */
public class ServicePersonWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SalesPersonWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    
    private ServicePersonOrganization servicePersonOrganization;
    
    private ProductCategory productCategory;
    
    
   
    public ServicePersonWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, ServicePersonOrganization servicePersonOrganization, EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.userAccount=account;
        this.business=system;
        this.servicePersonOrganization=servicePersonOrganization;
        productCategory=new ProductCategory();
        populateComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        refreshJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        productsComboBox = new javax.swing.JComboBox();

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });

        processJButton.setText("Process");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });

        productsComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---products---" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(184, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(processJButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(assignJButton)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(productsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(refreshJButton))))
                .addGap(229, 229, 229))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(refreshJButton)
                    .addComponent(productsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(processJButton)
                .addGap(57, 57, 57)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(assignJButton)
                .addContainerGap(372, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    
    public void populateComboBox()
    {
        productsComboBox.removeAllItems();
        //for(Product product:productCategory.getProductList())
           Product product = new Product();
        
            product=productCategory.addProduct();
            product.setProductName("air filter");
            product.getServiceInventory().setCount(10);
            productsComboBox.addItem(product);
            Product product1 = new Product();
            product1=productCategory.addProduct();
            product1.getServiceInventory().setCount(10);          
            product1.setProductName("turbo charger");
            productsComboBox.addItem(product1);
            Product product3 = new Product();
            product3=productCategory.addProduct();
            product3.getServiceInventory().setCount(10);
            
            product3.setProductName("diesel/petrol filer");
           productsComboBox.addItem(product3);
            Product product5 = new Product();
            product5=productCategory.addProduct();
            product5.getServiceInventory().setCount(10);
            product5.setProductName("inter-cooler");
            productsComboBox.addItem(product5);
           
            Product product7 = new Product();
            product7=productCategory.addProduct();
            product7.setProductName("worn injectors");
            product7.getServiceInventory().setCount(10);
            productsComboBox.addItem(product7);
            
            Product product8 = new Product();
            product8=productCategory.addProduct();
            product8.setProductName("EGR valves");
            product8.getServiceInventory().setCount(10);
            productsComboBox.addItem(product8);
        
    }
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : servicePersonOrganization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getFirstName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getFirstName();
            row[3] = request.getStatus();
            
            model.addRow(row);
        }
    }
    
//    public void populateProductTable(){
//        DefaultTableModel model = (DefaultTableModel) productTable.getModel();
//
//        model.setRowCount(0);
//        for (Product product : productCategory.getProductList()) {
//            product=productCategory.addProduct();
//            product.setProductName("air filter");
//            
//            product=productCategory.addProduct();
//            product.setProductName("turbo charger");
//            product=productCategory.addProduct();
//            product.setProductName("diesel/petrol filer");
//            product=productCategory.addProduct();
//            product.setProductName("inter-cooler");
//            product=productCategory.addProduct();
//            product.setProductName("worn injectors");
//            product=productCategory.addProduct();
//            product.setProductName("EGR valves");
//            
//            Object[] row = new Object[2];
//                    row[0] = product;
//                    model.addRow(row);
//            
//            for (ServiceInventory inventory : product.getServiceInventoryList().getInventoryList()) {
//                if (inventory.getInventoryID() > 0) {
//                   
//
//                }
//
//            }
//        }
//        
//    }
    
    
    
    
    
    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateTable();

    }//GEN-LAST:event_assignJButtonActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        SalesPersonWorkRequest request = (SalesPersonWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);

        request.setStatus("Processing");

        SalesPersonProcessWorkRequestJPanel processWorkRequestJPanel = new SalesPersonProcessWorkRequestJPanel(userProcessContainer, request);
        userProcessContainer.add("SalesPersonProcessWorkRequestJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_processJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    private javax.swing.JComboBox productsComboBox;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
