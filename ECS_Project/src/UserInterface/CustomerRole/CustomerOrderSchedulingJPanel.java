/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CustomerRole;

import business.EcoSystem;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.Organization;
import business.organization.SalesReceptionistOrganization;
import business.useraccount.UserAccount;
import business.workqueue.WorkRequest;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import business.consumer.Customer;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Chintan
 */
public class CustomerOrderSchedulingJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    EcoSystem system;
    private Customer customer;
    private UserAccount userAccount;
    private Enterprise enterprise;
    int seletedFlag = 0;

    /**
     * Creates new form CustomerOrderSchedulingJPanel
     */
    public CustomerOrderSchedulingJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, EcoSystem system,Customer customer) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.system = system;
        this.customer = customer;
        seletedFlag=0;
        populateTree();

        Calendar calendar = scheduleDate.getMonthView().getCalendar();
        calendar.setTime(new Date());
        scheduleDate.getMonthView().setLowerBound(calendar.getTime());
    }

    public void populateTree() {
        DefaultTreeModel model = (DefaultTreeModel) jTree.getModel();
        ArrayList<Network> networkList = system.getNetworkList();
        ArrayList<Enterprise> enterpriseList;
        ArrayList<Organization> organizationList;

        Network network;
        Enterprise enterprise;
        Organization organization;

        DefaultMutableTreeNode networks = new DefaultMutableTreeNode("Networks");
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        root.removeAllChildren();
        root.insert(networks, 0);

        DefaultMutableTreeNode networkNode;
        DefaultMutableTreeNode enterpriseNode;

        DefaultMutableTreeNode organizationNode;

        for (int i = 0; i < networkList.size(); i++) {
            network = networkList.get(i);
            networkNode = new DefaultMutableTreeNode(network.getName());
            networks.insert(networkNode, i);

            enterpriseList = network.getEnterpriseDirectory().getEnterpriseList();

            for (int j = 0; j < enterpriseList.size(); j++) {
                enterprise = enterpriseList.get(j);
                enterpriseNode = new DefaultMutableTreeNode(enterprise.getName());
                networkNode.insert(enterpriseNode, j);

                organizationList = enterprise.getOrganizationDirectory().getOrganizationList();

                for (int k = 0; k < organizationList.size(); k++) {
                    organization = organizationList.get(k);
                    organizationNode = new DefaultMutableTreeNode(organization.getName());
                    enterpriseNode.insert(organizationNode, k);
                }
            }
        }
        model.reload();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree = new javax.swing.JTree();
        scheduleDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        timeCmbBox = new javax.swing.JComboBox<>();
        scheduleAppointmentBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        selectedEnterpriseJLabel = new javax.swing.JLabel();

        jScrollPane1.setViewportView(jTree1);

        jTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTreeValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(jTree);

        jLabel1.setText("Schedule Visit Date:");

        jLabel2.setText("Schedule Time:");

        timeCmbBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---", "10:00AM", "10:30AM", "11:00AM", "11:30AM", "12:00AM", "12:30AM", "1:00PM", "1:30PM", "2:00PM", "2:30PM", "3:00PM", "3:30PM", "4:00PM", "4:30PM", "5:00PM", "5:30PM", "6:00PM", "6:30PM", "7:00PM" }));

        scheduleAppointmentBtn.setText("Schedule Appointment");
        scheduleAppointmentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleAppointmentBtnActionPerformed(evt);
            }
        });

        backBtn.setText("<< BACK");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Enterprise Selected:");

        selectedEnterpriseJLabel.setText("selected_enterprise");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(backBtn)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(selectedEnterpriseJLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(scheduleDate, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                        .addComponent(timeCmbBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(scheduleAppointmentBtn))
                .addGap(119, 119, 119))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(selectedEnterpriseJLabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(scheduleDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(timeCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(scheduleAppointmentBtn)
                            .addComponent(backBtn)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(146, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /*public void addToScheduleList(UserAccount userAccount,String date,String time){
     ArrayList<CustomerSchedule> customerScheduled = new ArrayList<>();
     
     CustomerSchedule cs = new CustomerSchedule(customer);
     customerScheduled.add(Customer);
     
    }*/

    private void scheduleAppointmentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleAppointmentBtnActionPerformed
        // TODO add your handling code here:
        if (seletedFlag == 0) {
            JOptionPane.showMessageDialog(this, "Selection of Enterprise(Retailer Type) Node is a manadate!!");
            return;
        } else if (selectedEnterpriseJLabel.getText().toString().equals("JTree")) {
            JOptionPane.showMessageDialog(this, "Selection of Enterprise(Retailer Type) Node is a manadate!!");
            return;
        } else {
            for (Network network : system.getNetworkList()) {
                if (network.getName().equals(selectedEnterpriseJLabel.getText().toString()) || selectedEnterpriseJLabel.getText().toString().equals("Networks")) {
                    JOptionPane.showMessageDialog(this, "Selection of Enterprise(Retailer Type) Node is a manadate!!");
                    return;
                }
                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                    if(enterprise.getName().toString().equals(selectedEnterpriseJLabel.getText())){
                    if (enterprise.getEnterpriseType().getValue().equals("Retailer")) {
                            String date;
                            try {
                                date = scheduleDate.getDate().toString();
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(this, "Select a date before scheduling!!!");
                                return;
                            }
                            String time = timeCmbBox.getSelectedItem().toString();
                            if (time.equals("---")) {
                                JOptionPane.showMessageDialog(this, "Select a time slot before scheduling!!!");
                            }

                            WorkRequest request = new WorkRequest();
                            //request.setMessage(message);
                            request.setScheduleDate(date);
                            request.setScheduleTime(time);
                            request.setCustomer(customer);
                            request.setSender(userAccount);
                            request.setStatus("Sent");

                            Organization org = null;
                            for (Network network1 : system.getNetworkList()) {
                                for (Enterprise enterprise1 : network1.getEnterpriseDirectory().getEnterpriseList()) {
                                    if (enterprise1.getName().equals(selectedEnterpriseJLabel.getText())) {
                                        for (Organization organization1 : enterprise1.getOrganizationDirectory().getOrganizationList()) {
                                            if (organization1 instanceof SalesReceptionistOrganization) {
                                                org = organization1;
                                                break;
                                            }
                                        }
                                    }
                                }
                            }

                            if (org != null) {
                                org.getWorkQueue().getWorkRequestList().add(request);
                                userAccount.getWorkQueue().getWorkRequestList().add(request);
                            }
                        }else{
                        JOptionPane.showMessageDialog(this, "Selection of Enterprise(Retailer Type) Node is a manadate!!");
                        return;                        
                        }
                    }
                     else {
                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                            if (organization.getName().equals(selectedEnterpriseJLabel.getText().toString())) {
                                JOptionPane.showMessageDialog(this, "Selection of Enterprise(Retailer Type) Node is a manadate!!");
                                return;
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_scheduleAppointmentBtnActionPerformed

    private void jTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTreeValueChanged
        // TODO add your handling code here:
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jTree.getLastSelectedPathComponent();
        if (selectedNode != null) {
            seletedFlag = 1;
            selectedEnterpriseJLabel.setText(selectedNode.toString());
        }
    }//GEN-LAST:event_jTreeValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree jTree;
    private javax.swing.JTree jTree1;
    private javax.swing.JButton scheduleAppointmentBtn;
    private org.jdesktop.swingx.JXDatePicker scheduleDate;
    private javax.swing.JLabel selectedEnterpriseJLabel;
    private javax.swing.JComboBox<String> timeCmbBox;
    // End of variables declaration//GEN-END:variables
}
